[tool.poetry]
name = "tenvplate"
version = "0.1.0"
description = ""
authors = ["Gabriele Calvo <gcalvo87@gmail.com>"]
readme = "README.md"
packages = [{ include = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
azure-keyvault-secrets = { version = "*", optional = true }
azure-identity = { version = "*", optional = true }
kubernetes = { version = "*", optional = true }

[tool.poetry.extras]
azure-keyvault = ["azure-identity", "azure-keyvault-secrets"]
kubernetes = ['kubernetes']

[tool.poetry.group.dev.dependencies]
ruff = ">=0.4.2"
mypy = ">=1.10.0"
pytest = ">=8.1.1"
poethepoet = ">=0.25.1"
coverage = ">=7.5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 120
target-version = "py310"
show-fixes = true

[tool.ruff.lint]
select = [# see https://beta.ruff.rs/docs/rules/
    "A", "E", "F", "UP", "I", "W", "SIM", "RUF", "C901"
]
ignore = [
    "A002", # Argument `id` is shadowing a Python builtin
    "A003", # Class attribute `...` is shadowing a Python builtin
    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]
exclude = [".venv", "__ignore__"]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = "tests|.venv|__ignore__"

[tool.pytest.ini_options]
filterwarnings = ["error"]

[tool.coverage.run]
omit = [
    "*/.venv/*",
    "tests/*",
]

[tool.poe.tasks]

[tool.poe.tasks.lint]
help = "Lint"
sequence = [
    { cmd = "poetry run ruff format ." },
    { cmd = "poetry run ruff check . --fix" },
    { cmd = "poetry run mypy ." },
]

[tool.poe.tasks.test]
help = "Run unit tests with code coverage"
sequence = [
    { cmd = "poetry run coverage run --source src -m pytest ./tests" },
    { cmd = "poetry run coverage report -m" },
]

[tool.poe.tasks.all]
help = "Run all required pre-push commands"
sequence = [{ ref = "lint" }, { ref = "test" }]